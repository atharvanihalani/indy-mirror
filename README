
TODO
    implement backtracking for the maze
        Add a 'dud' block if the maze is too easy?
    add pacman graphically
    sort pacman's movement
    add ghost graphically
    implement bfs



    add konami code easter egg??

Questions
    it seems super unwieldy to pass in the main gamepane to every single
    class. am i approaching it wrong? is there a more efficient way to do it?

design choices

    i used a separate child class for each MazeBlock instead of a) interfaces or
    b) making them within a single method
    latter cuz, with constraints array, common methods, etc, made more sense to
    have a distinct class for that. former cuz of more efficient polymorphic code

    the maze is procedurally generated starting from the bottom right cuz a) the
    constraints propagate outwards from there (and b) 'solvability' is more likely
    if I start from the end block??)

    note: both sets of 2d arrays are in row major

    note: when initializing a block, j and i are switched cuz i'm first setting xPos
    THEN setting yPos. however, the row-major representation has that the other way round.


TEMP error at
    [1, 2]
    [2, 0]
    [2, 2]